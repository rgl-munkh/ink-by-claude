{
  "info": {
    "name": "Claude Ink Tattoo Booking API",
    "description": "Complete API collection for the Claude Ink tattoo booking platform with authentication, portfolio management, availability, and booking endpoints.",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "noauth"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "tattooistId",
      "value": "",
      "type": "string"
    },
    {
      "key": "customerId",
      "value": "",
      "type": "string"
    },
    {
      "key": "bookingId",
      "value": "",
      "type": "string"
    },
    {
      "key": "portfolioId",
      "value": "",
      "type": "string"
    },
    {
      "key": "availabilityId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Signup - Customer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('customerId', response.user.id);",
                  "    pm.test('Customer created successfully', () => {",
                  "        pm.expect(response.user.role).to.equal('customer');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Mike\",\n  \"lastName\": \"Johnson\",\n  \"email\": \"mike@customer.com\",\n  \"password\": \"customerpass123\",\n  \"role\": \"customer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signup"]
            }
          }
        },
        {
          "name": "Signup - Tattooist",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('tattooistId', response.user.id);",
                  "    pm.test('Tattooist created successfully', () => {",
                  "        pm.expect(response.user.role).to.equal('tattooist');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Sarah\",\n  \"lastName\": \"Ink\",\n  \"email\": \"sarah@tattooink.com\",\n  \"password\": \"tattoopass123\",\n  \"role\": \"tattooist\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signup"]
            }
          }
        },
        {
          "name": "Signup - Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Admin\",\n  \"lastName\": \"User\",\n  \"email\": \"admin@system.com\",\n  \"password\": \"adminpass123\",\n  \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signup"]
            }
          }
        },
        {
          "name": "Login - Customer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"mike@customer.com\",\n  \"password\": \"customerpass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Login - Tattooist",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"sarah@tattooink.com\",\n  \"password\": \"tattoopass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Login - Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@system.com\",\n  \"password\": \"adminpass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Profile & Users",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "profile"]
            }
          }
        },
        {
          "name": "Admin - List All Users",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"]
            }
          }
        }
      ]
    },
    {
      "name": "File Upload",
      "item": [
        {
          "name": "Generate Presigned Upload URL",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Presigned URL generated', () => {",
                  "        pm.expect(response.uploadUrl).to.be.a('string');",
                  "        pm.expect(response.publicUrl).to.be.a('string');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"filename\": \"portfolio-art.jpg\",\n  \"contentType\": \"image/jpeg\",\n  \"folder\": \"portfolio\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/upload/presign",
              "host": ["{{baseUrl}}"],
              "path": ["api", "upload", "presign"]
            }
          }
        },
        {
          "name": "Generate Presigned URL - Invalid Content Type",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"filename\": \"document.pdf\",\n  \"contentType\": \"application/pdf\",\n  \"folder\": \"portfolio\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/upload/presign",
              "host": ["{{baseUrl}}"],
              "path": ["api", "upload", "presign"]
            }
          }
        }
      ]
    },
    {
      "name": "Portfolio Management",
      "item": [
        {
          "name": "Create Portfolio Item",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('portfolioId', response.portfolio.id);",
                  "    pm.test('Portfolio item created', () => {",
                  "        pm.expect(response.portfolio.imageUrl).to.be.a('string');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"imageUrl\": \"https://pub-example.r2.dev/portfolio/dragon-sleeve.jpg\",\n  \"description\": \"Traditional Japanese dragon sleeve with cherry blossoms and waves\",\n  \"styleTags\": [\"traditional\", \"japanese\", \"dragon\", \"sleeve\", \"color\", \"cherry-blossom\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/portfolio",
              "host": ["{{baseUrl}}"],
              "path": ["api", "portfolio"]
            }
          }
        },
        {
          "name": "Create Portfolio Item - Invalid URL",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"imageUrl\": \"not-a-valid-url\",\n  \"description\": \"Test with invalid URL\",\n  \"styleTags\": [\"test\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/portfolio",
              "host": ["{{baseUrl}}"],
              "path": ["api", "portfolio"]
            }
          }
        },
        {
          "name": "List Portfolio Items",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/portfolio/{{tattooistId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "portfolio", "{{tattooistId}}"]
            }
          }
        },
        {
          "name": "List Portfolio - Invalid UUID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/portfolio/invalid-uuid",
              "host": ["{{baseUrl}}"],
              "path": ["api", "portfolio", "invalid-uuid"]
            }
          }
        },
        {
          "name": "Update Portfolio Item",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated: Traditional Japanese dragon sleeve with cherry blossoms, waves, and mountain landscape\",\n  \"styleTags\": [\"traditional\", \"japanese\", \"dragon\", \"sleeve\", \"color\", \"cherry-blossom\", \"landscape\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/portfolio/item/{{portfolioId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "portfolio", "item", "{{portfolioId}}"]
            }
          }
        },
        {
          "name": "Delete Portfolio Item",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/api/portfolio/item/{{portfolioId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "portfolio", "item", "{{portfolioId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Availability Management",
      "item": [
        {
          "name": "Create Availability - Monday",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('availabilityId', response.availability.id);",
                  "    pm.test('Availability created', () => {",
                  "        pm.expect(response.availability.day).to.equal(1);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"day\": 1,\n  \"startTime\": \"09:00:00\",\n  \"endTime\": \"17:00:00\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/availability",
              "host": ["{{baseUrl}}"],
              "path": ["api", "availability"]
            }
          }
        },
        {
          "name": "Create Availability - Tuesday",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"day\": 2,\n  \"startTime\": \"10:00:00\",\n  \"endTime\": \"18:00:00\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/availability",
              "host": ["{{baseUrl}}"],
              "path": ["api", "availability"]
            }
          }
        },
        {
          "name": "Create Availability - Validation Error",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"day\": 8,\n  \"startTime\": \"25:00:00\",\n  \"endTime\": \"09:00:00\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/availability",
              "host": ["{{baseUrl}}"],
              "path": ["api", "availability"]
            }
          }
        },
        {
          "name": "Create Availability - Time Conflict",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"day\": 1,\n  \"startTime\": \"08:00:00\",\n  \"endTime\": \"12:00:00\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/availability",
              "host": ["{{baseUrl}}"],
              "path": ["api", "availability"]
            }
          }
        },
        {
          "name": "List Availability",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/availability/{{tattooistId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "availability", "{{tattooistId}}"]
            }
          }
        },
        {
          "name": "List Availability - Invalid UUID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/availability/invalid-uuid",
              "host": ["{{baseUrl}}"],
              "path": ["api", "availability", "invalid-uuid"]
            }
          }
        },
        {
          "name": "Delete Availability Slot",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/api/availability/slot/{{availabilityId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "availability", "slot", "{{availabilityId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Booking Management",
      "item": [
        {
          "name": "Create Booking",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('bookingId', response.booking.id);",
                  "    pm.test('Booking created successfully', () => {",
                  "        pm.expect(response.booking.status).to.equal('pending');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tattooistId\": \"{{tattooistId}}\",\n  \"slot\": \"2025-12-20T14:00:00.000Z\",\n  \"notes\": \"Small dragon tattoo on forearm, about 3 inches. First tattoo, nervous but excited!\",\n  \"depositAmount\": 5000\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"]
            }
          }
        },
        {
          "name": "Create Booking - Past Date",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tattooistId\": \"{{tattooistId}}\",\n  \"slot\": \"2023-12-20T14:00:00.000Z\",\n  \"notes\": \"Past date test\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"]
            }
          }
        },
        {
          "name": "Create Booking - Non-existent Tattooist",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tattooistId\": \"12345678-1234-4567-8901-123456789012\",\n  \"slot\": \"2025-12-20T14:00:00.000Z\",\n  \"notes\": \"Non-existent tattooist test\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"]
            }
          }
        },
        {
          "name": "Create Booking - Double Booking Test",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tattooistId\": \"{{tattooistId}}\",\n  \"slot\": \"2025-12-20T14:00:00.000Z\",\n  \"notes\": \"Conflict test - should fail with double booking error\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"]
            }
          }
        },
        {
          "name": "List Bookings - Customer",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"]
            }
          }
        },
        {
          "name": "List Bookings - With Query Parameters",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/bookings?status=pending&limit=10&offset=0",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            }
          }
        },
        {
          "name": "Get Booking Details",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}"]
            }
          }
        },
        {
          "name": "Get Booking Details - Invalid UUID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/bookings/invalid-uuid",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "invalid-uuid"]
            }
          }
        },
        {
          "name": "Update Booking Status - Confirm",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"confirmed\",\n  \"notes\": \"Booking confirmed for next Tuesday. Please arrive 15 minutes early.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}"]
            }
          }
        },
        {
          "name": "Update Booking Status - Complete",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\",\n  \"notes\": \"Tattoo session completed successfully. Client was very happy with the result!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}"]
            }
          }
        },
        {
          "name": "Update Booking Status - Cancel",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"cancelled\",\n  \"notes\": \"Cancelled due to client request. Deposit refunded.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}"]
            }
          }
        },
        {
          "name": "Update Booking Status - Invalid Transition",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"pending\",\n  \"notes\": \"Trying to revert to pending - should fail\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}"]
            }
          }
        },
        {
          "name": "Update Booking Status - Invalid Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"invalid_status\",\n  \"notes\": \"Testing invalid status value\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Malformed JSON",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"invalid\": json}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"]
            }
          }
        },
        {
          "name": "Missing Required Fields",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/availability",
              "host": ["{{baseUrl}}"],
              "path": ["api", "availability"]
            }
          }
        },
        {
          "name": "No Authentication",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"day\": 1,\n  \"startTime\": \"09:00:00\",\n  \"endTime\": \"17:00:00\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/availability",
              "host": ["{{baseUrl}}"],
              "path": ["api", "availability"]
            }
          }
        }
      ]
    },
    {
      "name": "Admin - Tattooist Management",
      "item": [
        {
          "name": "Approve Tattooist",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approved\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/tattooists/{{tattooistId}}/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "tattooists", "{{tattooistId}}", "approve"]
            },
            "description": "Admin endpoint to approve a tattooist account"
          }
        },
        {
          "name": "Reject Tattooist",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approved\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/tattooists/{{tattooistId}}/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "tattooists", "{{tattooistId}}", "approve"]
            },
            "description": "Admin endpoint to reject/revoke a tattooist account"
          }
        }
      ]
    },
    {
      "name": "Authorization Tests",
      "item": [
        {
          "name": "Customer Access to Tattooist Endpoint",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"day\": 1,\n  \"startTime\": \"09:00:00\",\n  \"endTime\": \"17:00:00\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/availability",
              "host": ["{{baseUrl}}"],
              "path": ["api", "availability"]
            },
            "description": "Should return 403 Forbidden when customer tries to create availability"
          }
        },
        {
          "name": "Tattooist Access to Booking Creation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tattooistId\": \"{{tattooistId}}\",\n  \"slot\": \"2025-12-20T14:00:00.000Z\",\n  \"notes\": \"Test booking from tattooist\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings"]
            },
            "description": "Should return 403 Forbidden when tattooist tries to create booking"
          }
        },
        {
          "name": "Customer Access to Admin Endpoint",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "admin", "users"]
            },
            "description": "Should return 403 Forbidden when customer tries to access admin endpoint"
          }
        }
      ]
    }
  ]
}